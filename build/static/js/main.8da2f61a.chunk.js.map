{"version":3,"sources":["components/Loader.js","components/App.js","components/ToastMessage.js","utils/index.js","components/Signin.js","components/Signup.js","components/ConfirmationModal.js","components/Checkout.js","registerServiceWorker.js","components/Navbar.js","components/Brews.js","index.js"],"names":["Loader","_ref","show","react_default","a","createElement","gestalt_es","position","dangerouslySetInlineStyle","__style","bottom","left","transform","react_spinners","color","size","margin","apiUrl","process","API_URL","strapi","Strapi","App","state","brands","searchTerm","loadingBrands","handleChange","value","_this","setState","searchBrands","_callee","response","regenerator_default","wrap","_context","prev","next","request","data","query","concat","sent","stop","this","console","error","_context2","t0","_this$state","display","justifyContent","marginTop","id","accessibilityLabel","onChange","placeholder","icon","marginBottom","backgroundColor","shape","map","brand","paddingY","width","key","_id","image","height","fit","alt","naturalHeight","naturalWidth","src","url","alignItems","direction","bold","name","description","Link","to","components_Loader","Component","ToastMessage","message","text","calculatePrice","items","reduce","acc","item","quantity","price","toFixed","calculateAmount","Number","setCart","cartKey","arguments","length","undefined","localStorage","setItem","JSON","stringify","getCart","getItem","parse","clearCart","removeItem","setToken","tokenKey","getToken","clearToken","Signin","username","password","toast","toastMessage","loading","event","persist","Object","defineProperty","target","handleSubmit","preventDefault","isFormEmpty","showToast","abrupt","login","jwt","redirectUser","path","props","history","push","_ref3","setTimeout","_this$state2","padding","style","textAlign","maxWidth","onSubmit","type","inline","disabled","components_ToastMessage","Signup","email","register","italic","ConfirmationModal","orderProcessing","cartItems","closeModal","handleSubmitOrder","accessibilityCloseLabel","accessibilityModalLabel","heading","onDismiss","footer","marginRight","marginLeft","onClick","role","align","_CheckoutForm","address","postalCode","city","confirmationEmailAddress","modal","handleConfirmOrder","_callee2","amount","token","stripe","createToken","createEntry","brews","from","subject","Date","now","html","_ref4","redirect","Fragment","es","onReady","input","focus","components_ConfirmationModal","CheckoutForm","withRouter","injectStripe","Checkout","apiKey","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","Navbar","handleSignOut","Navbar_AuthNav","Navbar_UnAuthNav","AuthNav","NavLink","activeClassName","exact","className","inlinesize","UnAuthNav","Brews","loadingBrews","addToCart","brew","alreadyInCart","findIndex","updatedItems","objectSpread","toConsumableArray","deleteItemFromCart","itemToBeDeletedId","filteredItems","filter","params","brandId","_this2","flexWrap","alignSelf","wash","iconColor","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","pathname","ReactDOM","BrowserRouter","components_Navbar","Switch","src_PrivateRoute","document","getElementById","URL","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8da2f61a.chunk.js","sourcesContent":["import React from 'react';\nimport { GridLoader } from 'react-spinners';\nimport { Box } from 'gestalt';\n\nconst Loader = ({ show }) => {\n  return (\n    show && <Box\n      position=\"fixed\"\n      dangerouslySetInlineStyle={{\n        __style: {\n          bottom: 300,\n          left: '50%',\n          transform: \"translateX(-50%)\"\n        }\n      }}\n    >\n      <GridLoader\n        color=\"darkorange\"\n        size={25}\n        margin=\"3px\"\n      />\n    </Box>\n  );\n};\n\nexport default Loader;","import React, { Component } from 'react';\nimport { Container, Box, Heading, Card, Image, Text, SearchField, Icon } from 'gestalt';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass App extends Component {\n  state = {\n    brands: [],\n    searchTerm: \"\",\n    loadingBrands: true\n  };\n\n  async componentDidMount() {\n    try {\n      const response = await strapi.request('POST', '/graphql', {\n        data: {\n          query: `query {\n            brands {\n              _id\n              name\n              description\n              image {\n                url\n              }\n            }\n          }`\n        }\n      });\n      // console.log(response);\n      this.setState({ brands: response.data.brands, loadingBrands: false });\n    } catch (err) {\n      console.error(err);\n      this.setState({ loadingBrands: false });\n    }\n  };\n\n  handleChange = ({ value }) => {\n    this.setState({ searchTerm: value }, () => this.searchBrands());\n  };\n\n  // filteredBrands = (searchTerm, brands) => {\n  //   return brands.filter(brand => {\n  //     return ( \n  //       brand.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n  //       brand.description.toLowerCase().includes(searchTerm.toLowerCase())\n  //     );\n  //   });\n  // };\n\n  searchBrands = async () => {\n    const response = await strapi.request('POST', '/graphql', {\n      data: {\n        query: `query {\n          brands(where: {\n            name_contains: \"${this.state.searchTerm}\"\n          }) {\n            _id\n            name\n            description\n            image {\n              url\n            }\n          }\n        }`\n      }\n    });\n    // console.log(this.state.searchTerm, response.data.brands);\n    this.setState({\n      brands: response.data.brands,\n      loadingBrands: false\n    });\n  };\n\n  render() {\n    const { brands, searchTerm, loadingBrands } = this.state;\n\n    return (\n      <Container>\n        {/* Brands Search Field */}\n        <Box display=\"flex\" justifyContent=\"center\" marginTop={4}>\n          <SearchField\n            id=\"searchField\"\n            accessibilityLabel=\"Brands Search Field\"\n            onChange={this.handleChange}\n            value={searchTerm}\n            placeholder=\"Search Brands\"\n          />\n          <Box margin={3}>\n            <Icon\n              icon=\"filter\"\n              color={searchTerm ? 'orange' : 'gray'}\n              size={20}\n              accessibilityLabel=\"Filter\"\n            />\n          </Box>\n        </Box>\n\n        {/* Brand Section */}\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          marginBottom={2}\n        >\n        {/* Brands Header */}\n        <Heading color=\"midnight\" size=\"md\">\n          Brew Brands\n        </Heading>\n        </Box>\n        {/* Brands */}\n        <Box\n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: \"#d6c8ec\"\n            }\n          }}\n          shape=\"rounded\"\n          wrap\n          display=\"flex\"\n          justifyContent=\"around\"\n        >\n          {/*this.filteredBrands(searchTerm, brands).map(brand => (*/}\n          {brands.map(brand => (\n            <Box\n              paddingY={4}\n              margin={2}\n              width={200}\n              key={brand._id}\n            >\n              <Card\n                image={\n                  <Box height={200} width={200}>\n                    <Image\n                      fit=\"cover\"\n                      alt=\"Brand\"\n                      naturalHeight={1}\n                      naturalWidth={1}\n                      src={`${apiUrl}${brand.image.url}`}\n                    />\n                  </Box>\n                }\n              >\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  direction=\"column\"\n                >\n                  <Text bold size=\"xl\">{brand.name}</Text>\n                  <Box height={75}><Text>{brand.description}</Text></Box>\n                  <Text bold size=\"xl\">\n                    <Link to={`/${brand._id}`}>See Brews</Link>\n                  </Text>\n                </Box>\n              </Card>\n            </Box>\n          ))}\n        </Box>\n        {/* <Spinner\n          show={loadingBrands}\n          accessibilityLabel=\"Loading Spinner\"\n        />  IF USE, ADD Spinner TO IMPORTED ELEMENTS FROM Gestalt */}\n        <Loader show={loadingBrands} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Toast, Box } from 'gestalt';\n\nconst ToastMessage = ({ show, message }) => {\n  return (\n    show && (\n      <Box\n        dangerouslySetInlineStyle={{\n          __style: {\n            bottom: 250,\n            left: \"50%\",\n            transform: \"translateX(30%)\"\n          }\n        }}\n      >\n        <Toast color=\"orange\" text={message} />\n      </Box>\n    )\n  )\n};\n\nexport default ToastMessage;","const CART_KEY = 'cart';\nconst TOKEN_KEY = 'jwt';\n\nexport const calculatePrice = items => {\n  return `$${items\n    .reduce((acc, item) => acc + item.quantity * item.price, 0)\n    .toFixed(2)\n  }`\n};\n\nexport const calculateAmount = items => {\n  return Number(items\n    .reduce((acc, item) => acc + item.quantity * item.price, 0)\n    .toFixed(2));\n};\n\n/* Cart Functions */\nexport const setCart = (value, cartKey = CART_KEY) => {\n  if (localStorage) {\n    localStorage.setItem(cartKey, JSON.stringify(value));\n  }\n};\n\nexport const getCart = (cartKey = CART_KEY) => {\n  if (localStorage && localStorage.getItem(cartKey)) {\n    return JSON.parse(localStorage.getItem(cartKey));\n  };\n  return [];\n};\n\nexport const clearCart = (cartKey = CART_KEY) => {\n  if (localStorage) {\n    localStorage.removeItem(cartKey);\n  }\n};\n\n/* Auth */\nexport const setToken = (value, tokenKey = TOKEN_KEY) => {\n  if (localStorage) {\n    localStorage.setItem(tokenKey, JSON.stringify(value));\n  }\n};\n\nexport const getToken = (tokenKey = TOKEN_KEY) => {\n  if (localStorage && localStorage.getItem(tokenKey)) {\n    return JSON.parse(localStorage.getItem(tokenKey));\n  };\n  return null;\n};\n\nexport const clearToken = (tokenKey = TOKEN_KEY) => {\n  if (localStorage) {\n    localStorage.removeItem(tokenKey);\n  }\n};","import React, { Component } from 'react';\nimport { Container, Box, Button, Heading, TextField } from 'gestalt';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { setToken } from '../utils';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Signin extends Component {\n  state={\n    username: '',\n    password: '',\n    toast: false,\n    toastMessage: '',\n    loading: false\n  };\n\n  handleChange =({ event, value }) => {\n    event.persist();\n    this.setState({ [event.target.name]: value });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n\n    if(!this.isFormEmpty(this.state)) {\n      this.showToast('Fill in all the fields');\n      return;\n    }\n\n    // Sign up User\n    try {\n      this.setState({ loading: true });\n      const response = await strapi.login(username, password);\n      this.setState({ loading: false });\n      setToken(response.jwt);\n      // console.log(response);\n      this.redirectUser('/');\n    } catch (err) {\n      this.setState({ loading: false });\n      this.showToast(err.message);\n    }\n  };\n\n  redirectUser = path => this.props.history.push(path);\n\n  isFormEmpty = ({ username, password }) => {\n    return username && password;\n  };\n\n  showToast = toastMessage => {\n    this.setState({ toast: true, toastMessage });\n    setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n  };\n\n  render() {\n    const { toastMessage, toast, loading } = this.state;\n\n    return (\n      <Container>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: '#d6a3b1'\n            }\n          }}\n          margin={4}\n          padding={4}\n          shape=\"rounded\"\n        >\n          {/* Sign In Form */}\n          <form\n            style={{\n              display: 'inlineBlock',\n              textAlign: 'center',\n              maxWidth: 450\n            }}\n            onSubmit={this.handleSubmit}\n          >\n            {/* Sign In Form Heading */}\n            <Box\n              marginBottom={2}\n              display=\"flex\"\n              direction=\"column\"\n              alignItems=\"center\"\n            >\n              <Heading color=\"midnight\">Welcome Back!</Heading>\n            </Box>\n            {/* Username Input */}\n            <TextField\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleChange}\n            />\n            {/* Password Input */}\n            <TextField\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n            <Button\n              inline\n              disabled={loading}\n              color=\"blue\"\n              type=\"submit\"\n              text=\"Submit\"\n            />\n          </form>\n        </Box>\n        {/*\n        <Box\n          marginTop={2}\n          display=\"flex\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <ToastMessage message={toastMessage} show={toast} />\n        </Box>\n        */}\n        <ToastMessage message={toastMessage} show={toast} />\n      </Container>\n    )\n  }\n};\n\nexport default Signin;\n","import React, { Component } from 'react';\nimport { Container, Box, Button, Heading, Text, TextField } from 'gestalt';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { setToken } from '../utils';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Signup extends Component {\n  state={\n    username: '',\n    email: '',\n    password: '',\n    toast: false,\n    toastMessage: '',\n    loading: false\n  };\n\n  handleChange =({ event, value }) => {\n    event.persist();\n    this.setState({ [event.target.name]: value });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { username, email, password } = this.state;\n\n    if(!this.isFormEmpty(this.state)) {\n      this.showToast('Fill in all the fields');\n      return;\n    }\n\n    // Sign up User\n    try {\n      this.setState({ loading: true });\n      const response = await strapi.register(username, email, password);\n      this.setState({ loading: false });\n      setToken(response.jwt);\n      // console.log(response);\n      this.redirectUser('/');\n    } catch (err) {\n      this.setState({ loading: false });\n      this.showToast(err.message);\n    }\n  };\n\n  redirectUser = path => this.props.history.push(path);\n\n  isFormEmpty = ({ username, email, password }) => {\n    return username && email && password;\n  };\n\n  showToast = toastMessage => {\n    this.setState({ toast: true, toastMessage });\n    setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n  };\n\n  render() {\n    const { toastMessage, toast, loading } = this.state;\n\n    return (\n      <Container>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: '#ebe2da'\n            }\n          }}\n          margin={4}\n          padding={4}\n          shape=\"rounded\"\n        >\n          {/* Sign Up Form */}\n          <form\n            style={{\n              display: 'inlineBlock',\n              textAlign: 'center',\n              maxWidth: 450\n            }}\n            onSubmit={this.handleSubmit}\n          >\n            {/* Sign Up Form Heading */}\n            <Box\n              marginBottom={2}\n              display=\"flex\"\n              direction=\"column\"\n              alignItems=\"center\"\n            >\n              <Heading color=\"midnight\">Let's Get Started</Heading>\n              <Text italic color=\"orchid\">Sign up to order some brews!</Text>\n            </Box>\n            {/* Username Input */}\n            <TextField\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleChange}\n            />\n            {/* Email Address Input */}\n            <TextField\n              id=\"email\"\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email Address\"\n              onChange={this.handleChange}\n            />\n            {/* Password Input */}\n            <TextField\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n            <Button\n              inline\n              disabled={loading}\n              color=\"blue\"\n              type=\"submit\"\n              text=\"Submit\"\n            />\n          </form>\n        </Box>\n        {/*\n        <Box\n          marginTop={2}\n          display=\"flex\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <ToastMessage message={toastMessage} show={toast} />\n        </Box>\n        */}\n        <ToastMessage message={toastMessage} show={toast} />\n      </Container>\n    )\n  }\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Box, Modal, Spinner, Button, Text } from 'gestalt';\nimport { calculatePrice } from '../utils';\n\nconst ConfirmationModal = ({\n  orderProcessing, cartItems, closeModal, handleSubmitOrder\n}) => {\n  return (\n    <Modal\n      accessibilityCloseLabel=\"close\"\n      accessibilityModalLabel=\"Confirm Your Order\"\n      heading=\"Confirm Your Order\"\n      onDismiss={closeModal}\n      footer={\n        <Box display=\"flex\" marginRight={-1} marginLeft={-1} justifyContent=\"center\">\n          <Box padding={1}>\n            <Button\n              size=\"lg\"\n              color=\"red\"\n              text=\"Submit\"\n              disabled={orderProcessing}\n              onClick={handleSubmitOrder}\n            />\n          </Box>\n          <Box padding={1}>\n            <Button\n              size=\"lg\"\n              text=\"Cancel\"\n              disabled={orderProcessing}\n              onClick={closeModal}\n            />\n          </Box>\n        </Box>\n      }\n      role=\"alertdialog\"\n      size=\"sm\"\n    >\n      {/* Order Summary */}\n      {!orderProcessing && (\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          direction=\"column\"\n          padding={2}\n          color=\"lightWash\"\n        >\n          {cartItems.map(item => (\n            <Box key={item._id} padding={1}>\n              <Text size=\"lg\" color=\"red\">\n                {item.name} X {item.quantity} - ${item.quantity * item.price}\n              </Text>\n            </Box>\n          ))}\n          <Box paddingY={2}>\n            <Text size=\"lg\" bold>\n              Total: {calculatePrice(cartItems)}\n            </Text>\n          </Box>\n        </Box>\n      )}\n      {/* order Processing Spinner */}\n      <Spinner show={orderProcessing} accessibilityLabel=\"Order Processing Spinner\" />\n      {orderProcessing && <Text align=\"center\" italic>Submitting Order...</Text>}\n    </Modal>\n  );\n};\n\nexport default ConfirmationModal;","import React, { Component } from 'react';\nimport { Container, Box, Heading, Text, TextField } from 'gestalt';\nimport { Elements, StripeProvider, CardElement, injectStripe } from\n  'react-stripe-elements';\nimport ToastMessage from './ToastMessage';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { getCart, calculatePrice, calculateAmount, clearCart } from '../utils';\nimport { withRouter } from 'react-router-dom';\nimport ConfirmationModal from './ConfirmationModal';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass _CheckoutForm extends Component {\n  state={\n    cartItems: [],\n    address: '',\n    postalCode: '',\n    city: '',\n    confirmationEmailAddress: '',\n    toast: false,\n    toastMessage: '',\n    orderProcessing: false,\n    modal: false\n  };\n\n  componentDidMount() {\n    this.setState({ cartItems: getCart() })\n  };\n\n  handleChange = ({ event, value }) => {\n    event.persist();\n    this.setState({ [event.target.name]: value });\n  };\n\n  handleConfirmOrder = async event => {\n    event.preventDefault();\n\n    if(!this.isFormEmpty(this.state)) {\n      this.showToast('Fill in all the fields');\n      return;\n    }\n\n    this.setState({ modal: true });\n  };\n\n  redirectUser = path => this.props.history.push(path);\n\n  handleSubmitOrder = async () => {\n    const { cartItems, city, address, postalCode, confirmationEmailAddress } = this.state;\n    const amount = calculateAmount(cartItems);\n    // Process order\n    this.setState({ orderProcessing: true });\n    let token;\n    try {\n      const response = await this.props.stripe.createToken();\n      token = response.token.id;\n      await strapi.createEntry('orders', {\n        amount,\n        brews: cartItems,\n        city,\n        postalCode,\n        address,\n        token\n      });\n      await strapi.request('POST', '/email', {\n        data: {\n          to: confirmationEmailAddress,\n          from: 'jsworldwebstudio@gmail.com',\n          subject: `Order Confirmation - BrewSampler ${new Date(Date.now())}`,\n          text: 'Your order has been processed',\n          html: '<bold>Expect your order to arrive in 2-3 shipping days</bold>'\n        }\n      });\n      this.setState({ orderProcessing: false, modal: false });\n      clearCart();\n      this.showToast('Your order has been successfully submitted!', true);\n    } catch (err) {\n      this.setState({ orderProcessing: false, modal: false });\n      this.showToast(err.message); \n    }\n  };\n\n  isFormEmpty = ({ address, postalCode, city, confirmationEmailAddress }) => {\n    return address && postalCode && city && confirmationEmailAddress ;\n  };\n\n  showToast = (toastMessage, redirect = false) => {\n    this.setState({ toast: true, toastMessage });\n    // previous line of code below...no callback, no redirect param...\n    // setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n    \n    setTimeout(() => this.setState({ toast: false, toastMessage: '' },\n    // add callback function if true passed to redirect argument, redirect to home\n      () => redirect && this.props.history.push('/')\n    ), 5000);\n  };\n\n  closeModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    const { toastMessage, toast, cartItems, modal, orderProcessing } = this.state;\n\n    return (\n      <Container>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          direction=\"column\"\n          margin={4}\n          padding={4}\n          shape=\"rounded\"\n          color=\"darkWash\"\n        >\n          {/* Checkout Form Heading */}\n          <Heading color=\"midnight\">Checkout</Heading>\n          {cartItems.length > 0 ? <React.Fragment>\n          {/* User Cart */}\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n            marginTop={2}\n            marginBottom={6}\n          >\n            <Text color=\"darkGray\" italic>{cartItems.length} Item&#40;s&#41; for Checkout</Text>\n            <Box padding={2}>\n              {cartItems.map(item => (\n                <Box key={item._id} padding={1}>\n                  <Text color=\"midnight\">\n                    {item.name} X {item.quantity} - ${item.quantity * item.price}\n                  </Text>\n                </Box>\n              ))}\n            </Box>\n            <Text bold>Total Amount: {calculatePrice(cartItems)}</Text>\n          </Box>\n\n          {/* Checkout Form */}\n          <form\n            style={{\n              display: 'inlineBlock',\n              textAlign: 'center',\n              maxWidth: 450\n            }}\n            onSubmit={this.handleConfirmOrder}\n          >\n            {/* Shipping Address Input */}\n            <TextField\n              id=\"address\"\n              type=\"text\"\n              name=\"address\"\n              placeholder=\"Shipping Address\"\n              onChange={this.handleChange}\n            />\n            {/* Postal Code Input */}\n            <TextField\n              id=\"postalCode\"\n              type=\"text\"\n              name=\"postalCode\"\n              placeholder=\"Postal Code\"\n              onChange={this.handleChange}\n            />\n            {/* City Input */}\n            <TextField\n              id=\"city\"\n              type=\"text\"\n              name=\"city\"\n              placeholder=\"City of Residence\"\n              onChange={this.handleChange}\n            />\n            {/* Confirmation Email Address Input */}\n            <TextField\n              id=\"confirmationEmailAddress\"\n              type=\"email\"\n              name=\"confirmationEmailAddress\"\n              placeholder=\"Confirmation Email Address\"\n              onChange={this.handleChange}\n            />\n            {/* Card Element - Area for Users to type their card info */}\n            <CardElement\n              id=\"stript__input\"\n              onReady={input => input.focus()}\n            />\n            <button id=\"stripe__button\" type=\"submit\">Submit</button>\n          </form>\n          </React.Fragment> : (\n            // Default Text if no items in the cart\n            <Box color=\"darkWash\" shape=\"rounded\" padding={4}>\n              <Heading align=\"center\" color=\"watermelon\" size=\"xs\">\n                Your Cart is Empty\n              </Heading>\n              <Text align=\"center\" italic color=\"green\">\n                Please make some brew selections!!!\n              </Text>\n            </Box>\n          )}\n        </Box>\n        {/* Confirmation Modal */}\n        {modal && (\n          <ConfirmationModal\n            orderProcessing={orderProcessing}\n            cartItems={cartItems}\n            closeModal={this.closeModal}\n            handleSubmitOrder={this.handleSubmitOrder}\n          />\n        )}\n        <ToastMessage message={toastMessage} show={toast} />\n      </Container>\n    )\n  }\n};\n\nconst CheckoutForm = withRouter(injectStripe(_CheckoutForm));\n\nconst Checkout = () => (\n  <StripeProvider apiKey=\"pk_test_p8jgfkFYM4MH44ZWzLXf6I3Z\">\n    <Elements>\n      <CheckoutForm />\n    </Elements>\n  </StripeProvider>\n);\n\nexport default Checkout;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Box, Text, Heading, Image, Button } from 'gestalt';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getToken, clearToken, clearCart } from '../utils';\n\nclass Navbar extends Component {\n  handleSignOut = () => {\n    clearToken();\n    clearCart();\n    this.props.history.push('/');\n  };\n\n  render() {\n    return getToken() !== null ?\n      <AuthNav handleSignOut={this.handleSignOut} /> : <UnAuthNav />;\n  };\n};\n\nconst AuthNav = ({ handleSignOut }) => {\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"around\"\n      height={70}\n      color=\"midnight\"\n      padding={1}\n      shape=\"roundedBottom\"\n    >\n      {/* Checkout Link */}\n      <NavLink activeClassName=\"active\" to=\"/checkout\">\n        <Text size=\"xl\" color=\"white\">Checkout</Text>\n      </NavLink>\n\n      {/* Title and Logo */}\n      <NavLink activeClassName=\"active\" exact to=\"/\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box margin={2} height={50} width={50}>\n            <Image\n              naturalHeight={1}\n              naturalWidth={1}\n              alt=\"BrewSampler Logo\"\n              src=\"./icons/logo.svg\"\n            />\n          </Box>\n          <div className=\"main-title\">\n            <Heading size=\"xs\" color=\"orange\">BrewSampler</Heading>\n          </div>\n        </Box>\n      </NavLink>\n\n      {/* Signout Button */}\n      <Button\n        inline\n        color=\"transparent\"\n        text=\"Sign Out\"\n        inlinesize=\"md\"\n        onClick={handleSignOut}\n      />\n    </Box>\n  );\n};\n\nconst UnAuthNav = () => {\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"around\"\n      height={70}\n      color=\"midnight\"\n      padding={1}\n      shape=\"roundedBottom\"\n    >\n      {/* Sign In Link */}\n      <NavLink activeClassName=\"active\" to=\"/signin\">\n        <Text size=\"xl\" color=\"white\">Sign In</Text>\n      </NavLink>\n\n      {/* Title and Logo */}\n      <NavLink activeClassName=\"active\" exact to=\"/\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box margin={2} height={50} width={50}>\n            <Image\n              naturalHeight={1}\n              naturalWidth={1}\n              alt=\"BrewSampler Logo\"\n              src=\"./icons/logo.svg\"\n            />\n          </Box>\n          <div className=\"main-title\">\n            <Heading size=\"xs\" color=\"orange\">BrewSampler</Heading>\n          </div>\n        </Box>\n      </NavLink>\n\n      {/* Sign Up Link */}\n      <NavLink activeClassName=\"active\" to=\"/signup\">\n        <Text size=\"xl\" color=\"white\">Sign Up</Text>\n      </NavLink>\n    </Box>\n  );\n};\n\nexport default withRouter(Navbar);","import React, { Component } from 'react'\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Box, Heading, Card, Image, Text, Button, Mask, IconButton } from 'gestalt';\nimport { Link } from 'react-router-dom';\nimport { calculatePrice, setCart, getCart } from '../utils';\nimport Loader from './Loader';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Brews extends Component {\n  state = {\n    brews: [],\n    brand: \"\",\n    cartItems: [],\n    loadingBrews: true\n  };\n\n  async componentDidMount() {\n    try {\n      const response = await strapi.request('POST', '/graphql', {\n        data: {\n          query: `query {\n            brand(id: \"${this.props.match.params.brandId}\") {\n              _id\n              name\n              brews {\n                _id\n                name\n                description\n                image {\n                  url\n                }\n                price\n              }\n            }\n          }`\n        }\n      });\n      // console.log(response);\n      this.setState({\n        brews: response.data.brand.brews,\n        brand: response.data.brand.name,\n        cartItems: getCart(),\n        loadingBrews: false\n      });\n    } catch (err) {\n      console.error(err);\n      this.setState({ loadingBrews: false });\n    }\n  };\n\n  addToCart = brew => {\n    const alreadyInCart = this.state.cartItems.findIndex(item => item._id === brew._id);\n\n    if (alreadyInCart === -1) {\n      const updatedItems = this.state.cartItems.concat({\n        ...brew,\n        quantity: 1\n      });\n      this.setState({ cartItems: updatedItems }, () => setCart(updatedItems));\n    } else {\n      const updatedItems = [...this.state.cartItems];\n      updatedItems[alreadyInCart].quantity += 1;\n      this.setState({ cartItems: updatedItems }, () => setCart(updatedItems));\n    }\n  };\n\n  deleteItemFromCart = itemToBeDeletedId => {\n    const filteredItems = this.state.cartItems.filter(\n      item => item._id !== itemToBeDeletedId\n    );\n    this.setState({ cartItems: filteredItems }, () => setCart(filteredItems));\n  };\n\n  render() {\n    const { brand, brews, cartItems, loadingBrews } = this.state;\n    return ( \n        <Box\n          marginTop={4}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"start\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              flexWrap: 'wrap-reverse'\n            }\n          }}\n        >         \n          { !loadingBrews && <React.Fragment>\n          {/* Brews Section */}\n          <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\n            {/* Brews Heading */}\n            <Box margin={2}>\n              <Heading color=\"orchid\">{brand}</Heading>\n            </Box>\n            {/* Brews */}\n            <Box\n              dangerouslySetInlineStyle={{\n                __style: {\n                  backgroundColor: '#bdcdd9'\n                }\n              }}\n              wrap\n              shape=\"rounded\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              padding={4}\n            >\n              {brews.map(brew => (\n                <Box\n                  paddingY={4}\n                  margin={2}\n                  width={210}\n                  key={brew._id}\n                >\n                  <Card\n                    image={\n                      <Box height={250} width={200}>\n                        <Image\n                          fit=\"cover\"\n                          alt=\"Brew\"\n                          naturalHeight={1}\n                          naturalWidth={1}\n                          src={`${apiUrl}${brew.image.url}`}\n                        />\n                      </Box>\n                    }\n                  >\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      direction=\"column\"\n                    >\n                      <Box marginBottom={2}><Text bold size=\"xl\">{brew.name}</Text></Box>\n                      <Box height={180} marginBottom={2}>\n                        <Text>{brew.description}</Text>\n                      </Box>\n                      <Text color=\"orchid\">${brew.price}</Text>\n                      <Box marginTop={2}>\n                        <Text bold size=\"xl\">\n                          <Button onClick={() => this.addToCart(brew)} color=\"blue\" text=\"Add to Cart\" />\n                        </Text>\n                      </Box>\n                    </Box>\n                  </Card>\n                </Box>\n              ))}\n            </Box>\n          </Box>\n          {/* User Cart */}\n          <Box alignSelf=\"end\" marginTop={2} marginLeft={2}>\n            <Mask shape=\"rounded\" wash>\n              <Box\n                display=\"flex\"\n                direction=\"column\"\n                alignItems=\"center\"\n                padding={2}\n              >\n                {/* User Cart Heading */}\n                <Heading align=\"center\" size=\"sm\">Your Cart</Heading>\n                <Text color=\"gray\" italic>\n                {cartItems.length} items selected\n                </Text>\n\n                {/* Cart Items */}\n                {cartItems.map(item =>(\n                  <Box key={item._id} display=\"flex\" alignItems=\"center\">\n                    <Text>\n                      {item.name} x {item.quantity} - ${(item.quantity * item.price).toFixed(2)}\n                    </Text>\n                    <IconButton\n                      accessibilityLabel=\"Delete Item\"\n                      icon=\"cancel\"\n                      size=\"sm\"\n                      iconColor='red'\n                      onClick={() => this.deleteItemFromCart(item._id)}\n                    />\n                  </Box>\n                ))}\n\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  direction=\"column\"\n                >\n                  <Box margin={2}>\n                    {cartItems.length === 0 && (\n                      <Text color=\"red\">Please select some items</Text>\n                    )}\n                  </Box>\n                  <Text size=\"lg\">Total: {calculatePrice(cartItems)}</Text>\n                  <Text>\n                    <Link to=\"/checkout\">Checkout</Link>\n                  </Text>\n                </Box>\n              </Box>\n            </Mask>\n          </Box>\n          </React.Fragment>}\n          <Loader show={loadingBrews} />\n        </Box>\n      )\n  }\n};\n\nexport default Brews;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport \"gestalt/dist/gestalt.css\";\nimport App from './components/App';\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport Checkout from './components/Checkout';\nimport registerServiceWorker from './registerServiceWorker';\nimport Navbar from './components/Navbar';\nimport Brews from './components/Brews';\nimport { getToken } from './utils';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    getToken() !== null ?\n      <Component {...props} /> : <Redirect to={{\n        pathname: '/signin',\n        state: { from: props.location }\n      }} />\n  )} />\n);\n\nconst Root = () => (\n  <Router>\n    <React.Fragment>\n      <Navbar />\n      <Switch>\n        <Route component={App} exact path=\"/\" />\n        <Route component={Signin} path=\"/signin\" />\n        <Route component={Signup} path=\"/signup\" />\n        <PrivateRoute component={Checkout} path=\"/checkout\" />\n        <Route component={Brews} path=\"/:brandId\" />\n      </Switch>\n    </React.Fragment>\n  </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n\nif (module.hot) {\n  module.hot.accept();\n};\n"],"sourceRoot":""}